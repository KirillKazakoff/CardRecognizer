{"version":3,"file":"bundle.js","mappings":"07BAEqBA,EAAAA,WACjB,WAAYC,I,4FAAU,SAClBC,KAAKC,MAAL,EAAiBC,SAASC,cAAcJ,GAAUK,UAClDJ,KAAKK,WAAa,IACrB,C,oDAED,SAAcC,GACNN,KAAKK,YACLL,KAAKK,WAAWE,UAAUC,OAAO,gBAErCR,KAAKK,WAAa,KAElB,IAAMI,EAAYT,KAAKC,MAAMS,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAAUC,SAASP,EAAlC,IAC9BG,IACAA,EAAUF,UAAUO,IAAI,gBACxBd,KAAKK,WAAaI,EAEzB,M,gFAjBgBX,G,suCCIAiB,EAAAA,GACjB,aAAc,Y,4FAAA,SACVf,KAAKgB,UAAYd,SAASC,cAAc,SACxCH,KAAKC,MAAQ,IAAIH,EAAM,eACvBE,KAAKiB,MAAQjB,KAAKgB,UAAUb,cAAc,oBAE1CH,KAAKgB,UAAUE,iBAAiB,UAAU,SAACC,GACvCA,EAAEC,iBAEF,IAAQC,EAAU,EAAKJ,MAAfI,MACFC,ECVX,SAAsBD,GAOzB,IANA,IAAME,GAAaF,EAAMA,EAAMG,OAAS,GAClCC,EAAMJ,EAAMK,UAAU,EAAGL,EAAMG,OAAS,GAEtCA,EAAWC,EAAXD,OACJG,EAAM,EAEDC,EAAI,EAAGA,EAAIJ,EAAQI,GAAK,EAAG,CAChC,IAAIC,GAASJ,EAAIG,GAGbA,EAAI,IAFQJ,EAAS,GAAK,IAG1BK,GAAS,GAGTA,EAAQ,IACRA,GAAS,GAGbF,GAAOE,CACV,CAGD,OAFmB,GAAMF,EAAM,KAETJ,CACzB,CDd+BO,CAAaT,GAC7BU,EAAU,KAEd,GAAIT,EACAS,ECYT,SAAwBN,GAC3B,QAAwBA,EAAxB,GAAKO,EAAL,KAAaC,EAAb,KAEAA,GAAWA,EAEX,IAAIF,EAAU,GACd,OAJAC,GAAUA,GAKV,KAAK,EACDD,EAAU,MACV,MACJ,KAAK,EACe,IAAZE,GAA6B,IAAZA,GAA6B,IAAZA,IAClCF,EAAU,gBAEE,IAAZE,GAA6B,IAAZA,IACjBF,EAAU,OAEE,IAAZE,GAA6B,IAAZA,IACjBF,EAAU,oBAEd,MACJ,KAAK,EACDA,EAAU,OACV,MACJ,KAAK,EACDA,EAAU,cACV,MACJ,KAAK,EACe,IAAZE,IACAF,EAAU,YAOlB,OAAOA,CACV,CDjDyBG,CAAeb,OACtB,CACH,IAAMc,EAAMjC,SAASkC,cAAc,OACnCD,EAAIvB,UAAY,QAChBuB,EAAIE,YAAc,sBAClB,EAAKrB,UAAUsB,YAAYH,GAC3BI,YAAW,kBAAMJ,EAAI3B,QAAV,GAAoB,IAClC,CACD,EAAKP,MAAMuC,cAAX,gBAAkCT,GACrC,GACJ,I,kRE3Bc,ICDEU,GACjB,c,4FAAc,SACVzC,KAAK0C,KAAO,IAAI3B,CACnB,I","sources":["webpack://yarn-cd/./src/app/components/card/cards.js","webpack://yarn-cd/./src/app/components/form/form.js","webpack://yarn-cd/./src/app/lib/utils.js","webpack://yarn-cd/./src/app/app.js","webpack://yarn-cd/./src/app/controller/controller.js"],"sourcesContent":["import './card.css';\n\nexport default class Cards {\n    constructor(selector) {\n        this.cards = [...document.querySelector(selector).children];\n        this.activeCard = null;\n    }\n\n    highlightCard(name) {\n        if (this.activeCard) {\n            this.activeCard.classList.remove('card__active');\n        }\n        this.activeCard = null;\n\n        const foundCard = this.cards.find((card) => card.className.includes(name));\n        if (foundCard) {\n            foundCard.classList.add('card__active');\n            this.activeCard = foundCard;\n        }\n    }\n}\n","import './form.css';\nimport '../card/card.css';\n\nimport Cards from '../card/cards';\nimport { getCardCompany, getCardCheck } from '../../lib/utils';\n\nexport default class Form {\n    constructor() {\n        this.container = document.querySelector('.form');\n        this.cards = new Cards('.card__list');\n        this.input = this.container.querySelector('.validate__input');\n\n        this.container.addEventListener('submit', (e) => {\n            e.preventDefault();\n\n            const { value } = this.input;\n            const isCardValid = getCardCheck(value);\n            let company = null;\n\n            if (isCardValid) {\n                company = getCardCompany(value);\n            } else {\n                const div = document.createElement('div');\n                div.className = 'error';\n                div.textContent = 'you put wrong value';\n                this.container.appendChild(div);\n                setTimeout(() => div.remove(), 1000);\n            }\n            this.cards.highlightCard(`card__${company}`);\n        });\n    }\n}\n","export function getRandomInt(min, max) {\n    const minInt = Math.ceil(min);\n    const maxInt = Math.floor(max);\n    return Math.floor(Math.random() * (maxInt - minInt)) + minInt;\n}\n\nexport function getCardCheck(value) {\n    const lastDigit = +value[value.length - 1];\n    const str = value.substring(0, value.length - 1);\n\n    const { length } = str;\n    let sum = 0;\n\n    for (let i = 0; i < length; i += 1) {\n        let digit = +str[i];\n        const parity = (length - 1) % 2;\n\n        if (i % 2 === parity) {\n            digit *= 2;\n        }\n\n        if (digit > 9) {\n            digit -= 9;\n        }\n\n        sum += digit;\n    }\n    const checkDigit = 10 - (sum % 10);\n\n    return checkDigit === lastDigit;\n}\n\nexport function getCardCompany(str) {\n    let [firstD, secondD] = str;\n    firstD = +firstD;\n    secondD = +secondD;\n\n    let company = '';\n    switch (firstD) {\n    case 2:\n        company = 'mir';\n        break;\n    case 3:\n        if (secondD === 0 || secondD === 6 || secondD === 8) {\n            company = 'dinners-club';\n        }\n        if (secondD === 1 || secondD === 5) {\n            company = 'jcb';\n        }\n        if (secondD === 4 || secondD === 7) {\n            company = 'american-express';\n        }\n        break;\n    case 4:\n        company = 'visa';\n        break;\n    case 5:\n        company = 'master-card';\n        break;\n    case 6:\n        if (secondD === 0) {\n            company = 'discover';\n        }\n        break;\n    default:\n        break;\n    }\n\n    return company;\n}\n","import '../css/defaultStyle.css';\nimport Controller from './controller/controller';\n\nconst controller = new Controller();\n","import Form from '../components/form/form';\n\nexport default class Controller {\n    constructor() {\n        this.form = new Form();\n    }\n}\n"],"names":["Cards","selector","this","cards","document","querySelector","children","activeCard","name","classList","remove","foundCard","find","card","className","includes","add","Form","container","input","addEventListener","e","preventDefault","value","isCardValid","lastDigit","length","str","substring","sum","i","digit","getCardCheck","company","firstD","secondD","getCardCompany","div","createElement","textContent","appendChild","setTimeout","highlightCard","Controller","form"],"sourceRoot":""}